import java.util.Scanner;

public class Sword {
    static StringBuilder text;

    public static void main(String[] args) {
        text = new StringBuilder();
        Scanner scan = new Scanner(System.in);
        StringBuilder sb = new StringBuilder();
        StringBuilder dataTmp = new StringBuilder();
        StringBuilder dataCopy = new StringBuilder();
        int n = Integer.parseInt(scan.nextLine());

        sb.append(repeatStr("#", n - 1));
        sb.append("/^\\");
        sb.append(repeatStr("#", n - 1));
        sb.append("\n");

        for (int i = 0; i < n / 2; i++) {
            sb.append(repeatStr("#", n - 2 - i));
            sb.append(".");
            sb.append(repeatStr(" ", 3 + i * 2));
            sb.append(".");
            sb.append(repeatStr("#", n - 2 - i));
            sb.append("\n");
        }
        int numberOfRows = n + 3;
        if (n == 4) {
            numberOfRows++;
        }
        dataTmp.setLength(0);
        dataTmp.append(repeatStr("#", (n - 1) / 2));
        dataTmp.append("|");
        dataTmp.append(repeatStr(" ", (n / 2) * 2 + 1));
        dataTmp.append("|");
        dataTmp.append(repeatStr("#", (n - 1) / 2));
        dataTmp.append("\n");
        for (int i = 0; i < numberOfRows; i++) {
            dataCopy.setLength(0);
            dataCopy.append(dataTmp);

            if (i == 0) {
                dataCopy.setCharAt(n, 'S');
            } else if (i == 1) {
                dataCopy.setCharAt(n, 'O');
            } else if (i == 2) {
                dataCopy.setCharAt(n, 'F');
            } else if (i == 3) {
                dataCopy.setCharAt(n, 'T');
            } else if (i == (numberOfRows - 3)) {
                dataCopy.setCharAt(n, 'U');
            } else if (i == (numberOfRows - 2)) {
                dataCopy.setCharAt(n, 'N');
            } else if (i == (numberOfRows - 1)) {
                dataCopy.setCharAt(n, 'I');
            }
            sb.append(dataCopy);
        }
        sb.append("@");
        sb.append(repeatStr("=", 2 * n - 1));
        sb.append("@");
        sb.append("\n");

        if (n % 2 != 0) {
            for (int i = 0; i < (n - 1) / 2; i++) {
                sb.append(repeatStr("#", (n + 3) / 2));
                sb.append("|");
                sb.append(repeatStr(" ", n - 4));
                sb.append("|");
                sb.append(repeatStr("#", (n + 3) / 2));
                sb.append("\n");
            }
        } else {
            for (int i = 0; i < (n - 1) / 2 + 1; i++) {
                sb.append(repeatStr("#", (n + 3) / 2));
                sb.append("|");
                sb.append(repeatStr(" ", n - 3));
                sb.append("|");
                sb.append(repeatStr("#", (n + 3) / 2));
                sb.append("\n");
            }
        }
        if (n % 2 != 0) {
            sb.append(repeatStr("#", (n + 3) / 2));
            sb.append("\\");
            sb.append(repeatStr(".", n - 4));
            sb.append("/");
            sb.append(repeatStr("#", (n + 3) / 2));
            sb.append("\n");
        } else {
            sb.append(repeatStr("#", (n + 3) / 2));
            sb.append("\\");
            sb.append(repeatStr(".", n - 3));
            sb.append("/");
            sb.append(repeatStr("#", (n + 3) / 2));
            sb.append("\n");
        }
        System.out.println(sb.toString());
    }
    static StringBuilder repeatStr(String strToRepeat, int count) {
        text.setLength(0);
        for (int i = 0; i < count; i++) {
            text.append(strToRepeat);
        }
        return text;
    }
}
